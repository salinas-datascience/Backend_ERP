version: '3.8'

services:
  db:
    image: postgres:15
    container_name: mi_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s  # Reducido para desarrollo
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: mi_fastapi
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      ENV_STATE: production  # Para configuración condicional en la app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:  #  <searchIndex index="3" ></searchIndex> 
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    # Comentar volumes y command para producción.
    # volumes:
    #   - ./app:/app
    # command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  db-init:
    build: .
    container_name: mi_db_init
    command: ["python", "init_db.py"]
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mi_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data: